/*
Deployment script for PetCare_DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PetCare_DB"
:setvar DefaultFilePrefix "PetCare_DB"
:setvar DefaultDataPath "C:\Users\darah\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\darah\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Dropping Foreign Key [dbo].[FK_appointmentTable_PetID]...';


GO
ALTER TABLE [dbo].[appointmentTable] DROP CONSTRAINT [FK_appointmentTable_PetID];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Dropping Foreign Key [dbo].[FK_PetTable_ownerID]...';


GO
ALTER TABLE [dbo].[PetTable] DROP CONSTRAINT [FK_PetTable_ownerID];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Starting rebuilding table [dbo].[PetTable]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PetTable] (
    [petID]      INT           IDENTITY (1, 1) NOT NULL,
    [petName]    NVARCHAR (50) NULL,
    [petSpecies] NVARCHAR (50) NULL,
    [petBreed]   NVARCHAR (50) NULL,
    [petGender]  BIT           NULL,
    [petAge]     INT           NULL,
    [ownerID]    INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([petID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PetTable])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PetTable] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PetTable] ([petID], [petName], [petSpecies], [petBreed], [petGender], [petAge], [ownerID])
        SELECT   [petID],
                 [petName],
                 [petSpecies],
                 [petBreed],
                 [petGender],
                 [petAge],
                 [ownerID]
        FROM     [dbo].[PetTable]
        ORDER BY [petID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PetTable] OFF;
    END

DROP TABLE [dbo].[PetTable];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PetTable]', N'PetTable';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Foreign Key [dbo].[FK_appointmentTable_PetID]...';


GO
ALTER TABLE [dbo].[appointmentTable] WITH NOCHECK
    ADD CONSTRAINT [FK_appointmentTable_PetID] FOREIGN KEY ([petID]) REFERENCES [dbo].[PetTable] ([petID]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Foreign Key [dbo].[FK_PetTable_ownerID]...';


GO
ALTER TABLE [dbo].[PetTable] WITH NOCHECK
    ADD CONSTRAINT [FK_PetTable_ownerID] FOREIGN KEY ([ownerID]) REFERENCES [dbo].[OwnerTable] ([ownerID]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[appointmentTable] WITH CHECK CHECK CONSTRAINT [FK_appointmentTable_PetID];

ALTER TABLE [dbo].[PetTable] WITH CHECK CHECK CONSTRAINT [FK_PetTable_ownerID];


GO
PRINT N'Update complete.';


GO
